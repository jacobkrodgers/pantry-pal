// Models related to recipes

model Recipe {
  id           String       @id @default(uuid())
  name         String
  ingredients  Ingredient[]
  instructions String       @db.LongText
  prepTime     String
  cookTime     String
  dateAdded    DateTime     @default(now())
  dateUpdated  DateTime     @updatedAt
  isPublic     Boolean
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  dietTags     DietTag[]

  @@unique([name, userId]) // Users can't have duplicate recipes with the same name
}

model Ingredient {
  id             String        @id @default(uuid())
  name           String
  quantityUnit   String
  quantity       Int
  form           String
  recipes        Recipe[]
  Pantry         Pantry?       @relation(fields: [pantryId], references: [id])
  pantryId       String?
  ShoppingList   ShoppingList? @relation(fields: [shoppingListId], references: [id])
  shoppingListId String?

  @@unique([name, form, pantryId])
  @@unique([name, form, shoppingListId])
}

model DietTag {
  name   String   @id
  recipe Recipe[]
}
