import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import InitColorSchemeScript from '@mui/material/InitColorSchemeScript';
import { Roboto } from 'next/font/google';
import { ThemeProvider } from '@mui/material/styles';
import theme from './theme';
import { Box, CssBaseline } from "@mui/material";
import SideBar from "../Components/SideBar/SideBar";
import { cookies } from "next/headers";
import { getPublicUserBySessionId } from "@/controller/userController";
import { PantryProvider } from "@/Components/Providers/PantryProvider";

const roboto = Roboto({
  weight: ['300', '400', '500', '700'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-roboto',
});

export const metadata: Metadata = {
  title: "PantryPal",
  description: "Generated by create next app",
};

export default async function RootLayout({children}: Readonly<{children: React.ReactNode}>) 
{
    // Attempt to get session ID from user cookies
    const cookieStore = await cookies();
    const sessionId = cookieStore.get('session')?.value;
    let user = undefined;
    
    if (sessionId)
    {
        user = (await getPublicUserBySessionId(sessionId))?.payload;
    }
    
    return (
        <html lang="en" suppressHydrationWarning>
        <body className={roboto.variable}>
        <AppRouterCacheProvider>
                <InitColorSchemeScript attribute="class" />
                <ThemeProvider theme={theme}>
                <CssBaseline />
                <PantryProvider>
                    <SideBar user={user}>
                        {children}
                    </SideBar>
                </PantryProvider>
                </ThemeProvider>
            </AppRouterCacheProvider>
        </body>
        </html>
    );
}
